# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-app
  namespace: myapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend-app
  template:
    metadata:
      labels:
        app: frontend-app
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: nginx:alpine  # In real scenario, this would be your frontend image
        ports:
        - containerPort: 80
        env:
        - name: API_URL
          value: "http://backend-service/api"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5

---
# Frontend Service (ClusterIP)
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: myapp
spec:
  type: ClusterIP
  selector:
    app: frontend-app
  ports:
  - port: 80
    targetPort: 80
    name: http

---
# LoadBalancer Service (Alternative external access)
apiVersion: v1
kind: Service
metadata:
  name: frontend-loadbalancer
  namespace: myapp
spec:
  type: LoadBalancer
  selector:
    app: frontend-app
  ports:
  - port: 80
    targetPort: 80
    name: http
